# Generated by Django 4.1.4 on 2023-01-29 11:06

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_id', models.IntegerField(db_index=True, default=0, editable=False)),
                ('name', models.CharField(db_index=True, max_length=250)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Db',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_id', models.IntegerField(db_index=True, default=0, editable=False)),
                ('document_name', models.CharField(db_index=True, max_length=250)),
                ('date', models.DateField(db_index=True)),
                ('note', models.TextField(blank=True, max_length=2000)),
            ],
            options={
                'ordering': ['-date', 'document_name'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_id', models.IntegerField(db_index=True, default=0, editable=False)),
                ('file_bin', models.BinaryField()),
                ('file_name', models.FileField(max_length=250, upload_to='')),
                ('file_size', models.TextField(null=True)),
                ('file_type', models.TextField(null=True)),
                ('file_date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'ordering': ['-file_date', 'file_name'],
            },
        ),
        migrations.CreateModel(
            name='MyDocsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True, default=0, unique=True)),
                ('max_lines', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000000000)])),
                ('max_upload_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1048576), django.core.validators.MaxValueValidator(2147483647)])),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_id', models.IntegerField(db_index=True, default=0, editable=False)),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=250)),
                ('address', models.CharField(blank=True, db_index=True, max_length=250)),
                ('note', models.TextField(blank=True, max_length=2000)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddConstraint(
            model_name='owner',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('db_id'), name='unique_lower_name_owner_db_id'),
        ),
        migrations.AddField(
            model_name='mydocssettings',
            name='db',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.db'),
        ),
        migrations.AddField(
            model_name='file',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.document'),
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ManyToManyField(blank=True, to='documents.category'),
        ),
        migrations.AddField(
            model_name='document',
            name='owner',
            field=models.ManyToManyField(blank=True, to='documents.owner'),
        ),
        migrations.AddField(
            model_name='db',
            name='user',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('db_id'), name='unique_lower_name_category_db_id'),
        ),
        migrations.AddConstraint(
            model_name='db',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_lower_name_db'),
        ),
    ]
